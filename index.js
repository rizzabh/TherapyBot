const Database = require("@replit/database")
const Discord = require("discord.js");
const fetch = require("node-fetch")
const keepAlive = require("./server")

const db = new Database()
const client = new Discord.Client();
const sad = ["bt", "sad", "depressed", "unhappy", "anxiety", "kms", "Sad", "Bt", "Depressed", "Anxiety", "Unhappy", "Kms", "hate", "Hate", "hates"]
const starterphrase = ["There exists no bad trip in the land of traveler", "Come on you got it ", "The only way from rock bottom is Up ~Harsh Maru", "Thug it out", "Its fine not everyday are UPS"]
const cats =["cats","cat","Cat","Cats"]





db.get("phrase").then(phrase => {
  if (!phrase || phrase.length < 1) {
    db.set("phrase", starterphrase)
  }
})

function updatephrase(phrasemessage) {
  db.get("phrase").then(phrase => {
    if (!phrase) {
      phrase = []  // Initialize phrase as an empty array if it doesn't exist
    }
    phrase.push(phrasemessage)
    db.set("phrase", phrase)  // Set the "phrase" key with the updated array containing the new phrase
  })
}

function deletephrase(index) {
  db.get("phrase").then(phrase => {
    if (phrase.length > index) {
      phrase.splice(index, 1)
      db.set("phrase", phrase)

    }
  })

}

function getQuote() {
  return fetch("https://zenquotes.io/api/random")
    .then(res => {
      return res.json()
    })
    .then(data => {
      return data[0]["q"] + " -" + data[0]["a"]

    })
}

client.on("ready", () => {
  console.log(`Logged in as ${client.user.tag}!`)
})

client.on("message", msg => {
  if (msg.author.bot) {
    return
  }
  if (msg.content === "!sed") {
    getQuote().then(quote => msg.channel.send(quote))
  }
  if (sad.some(word => msg.content.includes(word))) {
    db.get("phrase").then(phrases => {
      if (phrases && phrases.length > 0) {
        const phrase = phrases[Math.floor(Math.random() * phrases.length)]
        msg.reply(phrase)
      } else {
        msg.reply("I don't have any phrases to share at the moment.")
      }
    })

  }

  if (msg.content.startsWith("+")) {
    phrasemessage = msg.content.split("+ ")[1]
    updatephrase(phrasemessage)
    msg.channel.send("New phrase added")
  }
  if (msg.content.startsWith("-")) {
    index = parseInt(msg.content.split("- ")[1])
    deletephrase(index)
    msg.channel.send("Phrase deleted")
  }
  if (msg.content.startsWith(">")) {
    db.get("phrase").then(phrase => {
      msg.channel.send(phrase)
    })
  }
  if (msg.content.startsWith(":commands")) {
    msg.reply(` \`!sed\` : Random quote generated by zenquote api
    
    \`cats/cat\` : Generates a random cat image.

\`bt\`, \`sad\`, \`depressed\`, \`unhappy\`,\`anxiety\` : randomly generates quotes added in the list

\`+ "followed by a quote"\` : Adds a custom quote

\`- 0\` : deletes quote at 0 index

\`>\` : List all of the quotes

\`:commands\` : List all of the commands`)
  }
  if (msg.content.includes("cats") || msg.content.includes("cat") || msg.content.includes("Cats") ||msg.content.includes("Cat") || msg.content.includes("CATS")) {
    fetch("https://api.thecatapi.com/v1/images/search")
      .then(res => {
        return res.json()
      })
      .then(data => {
        msg.channel.send(data[0].url)
      })
  }

})

keepAlive()
client.login(process.env.TOKEN)